name: Salsa CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  VERSION: 0.1

jobs:

  set-version:
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: set version
        id: set-version
        run: |
          echo Faking a Semantic Version
          echo ::set-output name=version::${{ env.VERSION }}.$(date "+%Y%m%d%H%M%S")

  test:
    needs:
      - set-version
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Extract version of Go to use
        run: echo "GOVERSION=$(cat go.mod | grep -w "go" | awk ' { print $2 } ' | grep -w "^[^v]")" >> $GITHUB_ENV

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        id: go-mod-cache
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test Salsa
        run: make test

      - name: Ensure no files were modified as a result of the build
        run: git update-index --refresh && git diff-index --quiet HEAD -- || git diff --exit-code

#  release:
#    if: ${{ github.ref == 'refs/heads/main' }}
#    needs:
#      - set-version
#      - test
#    runs-on: ubuntu-20.04
#    steps:
#
#      - name: Checkout latest code
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Extract version of Go to use
#        run: echo "GOVERSION=$(cat go.mod | grep -w "go" | awk ' { print $2 } ' | grep -w "^[^v]")" >> $GITHUB_ENV
#
#      - name: Set up Go
#        uses: actions/setup-go@v2
#        with:
#          go-version: ${{ env.GOVERSION }}
#
#      - name: Create tag
#        run: |
#          git tag ${{ needs.set-version.outputs.version }}
#
#      - uses: navikt/github-app-token-generator@v1
#        id: get-homebrew-token
#        with:
#          private-key: ${{ secrets.NAIS_APP_PRIVATE_KEY }}
#          app-id: ${{ secrets.NAIS_APP_ID }}
#          repo: nais/homebrew-tap
#
#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@v2
#        with:
#          distribution: goreleaser
#          version: latest
#          args: release -f .goreleaser.yml --rm-dist --debug
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          PUSH_TOKEN: ${{ steps.get-homebrew-token.outputs.token }}

      #- uses: navikt/github-app-token-generator@v1
      #  id: get-token
      #  with:
      #    private-key: ${{ secrets.NAIS_APP_PRIVATE_KEY }}
      #    app-id: ${{ secrets.NAIS_APP_ID }}
      #    repo: nais/nais-ppa

      #- name: Checkout nais-ppa
      #  uses: actions/checkout@v2
      #  with:
      #    repository: nais/nais-ppa
      #    token: ${{ steps.get-token.outputs.token }}
      #    path: pparepo

      #- name: Add new deb to ppa
      #  id: update_ppa
      #  env:
      #    VERSION: ${{ needs.set-version.outputs.version }}
      #    EMAIL: aura@nav.no
      #  run: |
      #    echo "Version ${VERSION} was released, adding to PPA"
      #    cd pparepo

      #    # Fetch latest deb
      #    wget https://github.com/${{ github.repository }}/releases/download/${VERSION}/salsa_${VERSION}.deb

      #    # Commit and push changes
      #    git config user.name "$GITHUB_ACTOR"
      #    git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      #    git add salsa_${VERSION}.deb
      #    git --no-pager diff --cached
      #    git commit --all --message "Add version ${VERSION} of salsa"
      #    git push
